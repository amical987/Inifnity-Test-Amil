// <auto-generated />
using System;
using BlogApp.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogApp.Dal.Migrations
{
    [DbContext(typeof(BlogAppDBContext))]
    partial class BlogAppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogApp.Dal.Domain.Blog", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(3500)")
                        .HasMaxLength(3500);

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("BlogID");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogID = 1,
                            Content = "",
                            PublishedAt = new DateTime(2020, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "5 tips how to eat healthy",
                            Title = "How to get through the day healthy"
                        },
                        new
                        {
                            BlogID = 2,
                            Content = "",
                            PublishedAt = new DateTime(2020, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = "5 tips that beating is not the way",
                            Title = "How to raise your child"
                        });
                });

            modelBuilder.Entity("BlogApp.Dal.Domain.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Blogs")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewProfile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Age = "18",
                            Blogs = 6,
                            Email = "amilcalija@hotmail.com",
                            Name = "Amil Calija",
                            ViewProfile = "www.eating.ba"
                        },
                        new
                        {
                            UserID = 2,
                            Age = "25",
                            Blogs = 5,
                            Email = "admirmujkic@hotmail.com",
                            Name = "Admir Mujkic",
                            ViewProfile = "www.kids.ba"
                        },
                        new
                        {
                            UserID = 3,
                            Age = "17",
                            Blogs = 4,
                            Email = "semsudinasmajkic@hotmail.com",
                            Name = "Semsudina Smajkic",
                            ViewProfile = "www.tuta.ba"
                        },
                        new
                        {
                            UserID = 4,
                            Age = "28",
                            Blogs = 3,
                            Email = "admirmehanovic@hotmail.com",
                            Name = "Admir Mehanovic",
                            ViewProfile = "www.maldivi.ba"
                        },
                        new
                        {
                            UserID = 5,
                            Age = "30",
                            Blogs = 2,
                            Email = "avdohercegovac@hotmail.com",
                            Name = "Avdo Hercegovac",
                            ViewProfile = "www.askeri.ba"
                        },
                        new
                        {
                            UserID = 6,
                            Age = "45",
                            Blogs = 1,
                            Email = "hadzibuba@hotmail.com",
                            Name = "Hadzi Buba",
                            ViewProfile = "www.defterhefte.ba"
                        });
                });

            modelBuilder.Entity("BlogApp.Dal.Domain.UserBlog", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "BlogID");

                    b.HasIndex("BlogID");

                    b.ToTable("UsersBlogs");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            BlogID = 1
                        },
                        new
                        {
                            UserID = 1,
                            BlogID = 2
                        },
                        new
                        {
                            UserID = 2,
                            BlogID = 2
                        });
                });

            modelBuilder.Entity("BlogApp.Dal.Domain.UserBlog", b =>
                {
                    b.HasOne("BlogApp.Dal.Domain.Blog", "Blog")
                        .WithMany("MyUsers")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogApp.Dal.Domain.User", "User")
                        .WithMany("MyBlogs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
